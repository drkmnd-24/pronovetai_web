# Generated by Django 5.1.7 on 2025-06-08 06:24

import django.utils.timezone
import pronovetai_app.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        db_column="user_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_column="user_login", max_length=150, unique=True
                    ),
                ),
                ("password", models.CharField(db_column="user_pass", max_length=128)),
                (
                    "email",
                    models.EmailField(
                        blank=True, db_column="user_email", max_length=254
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, db_column="user_first_name", max_length=150
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, db_column="user_last_name", max_length=150
                    ),
                ),
                (
                    "last_login",
                    pronovetai_app.models.MyDateTimeField(
                        blank=True, db_column="last_login", null=True
                    ),
                ),
                (
                    "date_joined",
                    pronovetai_app.models.MyDateTimeField(
                        db_column="user_registered", default=django.utils.timezone.now
                    ),
                ),
                (
                    "created_date",
                    pronovetai_app.models.MyDateTimeField(
                        auto_now_add=True, db_column="created_date"
                    ),
                ),
                (
                    "edited_date",
                    pronovetai_app.models.MyDateTimeField(
                        auto_now=True, db_column="edited_date"
                    ),
                ),
            ],
            options={
                "db_table": "pt_users",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "street_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("barangay", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "pt_addresses",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Building",
            fields=[
                (
                    "iid",
                    models.AutoField(
                        db_column="building_id", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("year_built", models.PositiveIntegerField()),
                ("is_for_sale", models.BooleanField(default=False)),
                ("is_peza_certified", models.BooleanField(default=False)),
                ("is_strata", models.BooleanField(default=False)),
                (
                    "typical_floor_plate_area",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "floor_to_ceiling_height",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("number_of_floors", models.PositiveIntegerField()),
                ("parking_floors", models.PositiveIntegerField()),
                ("passenger_elevators", models.PositiveIntegerField()),
                ("service_elevators", models.PositiveIntegerField()),
                ("ac_type", models.CharField(max_length=50)),
                (
                    "ac_operating_hours_charge",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("office_rent", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "association_dues",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "floor_area_ratio",
                    models.DecimalField(decimal_places=2, max_digits=4),
                ),
                (
                    "gross_floor_area",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "gross_leasable_area",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "space_for_lease",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "space_for_sale",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "space_occupied",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="created_date"),
                ),
                (
                    "last_edited",
                    models.DateTimeField(auto_now=True, db_column="edited_date"),
                ),
            ],
            options={
                "db_table": "pt_buildings",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BuildingGrade",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="grade_id", primary_key=True, serialize=False
                    ),
                ),
                ("description", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "pt_building_grades",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BuildingImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="building_images/",
                        validators=[pronovetai_app.models.validated_image_size],
                    ),
                ),
            ],
            options={
                "db_table": "pt_building_images",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BuildingType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="type_id", primary_key=True, serialize=False
                    ),
                ),
                ("description", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "pt_building_types",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="company_id", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("industry", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "pt_companies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                ("email", models.EmailField(max_length=254)),
                ("position", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("fax_number", models.CharField(blank=True, max_length=20, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "contact_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("property_manager", "Property Manager"),
                            ("tenant", "Tenant"),
                            ("agent", "Agent"),
                            ("owner", "Owner"),
                            ("owner_representative", "Owner Representative"),
                            ("pta", "PTA"),
                            ("others", "Others"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "pt_contacts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "image",
                    models.ImageField(
                        upload_to="images/",
                        validators=[pronovetai_app.models.validated_image_size],
                    ),
                ),
            ],
            options={
                "db_table": "pt_images",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("text", models.TextField(db_column="note_text")),
                ("created_at", models.DateTimeField(db_column="created_at")),
            ],
            options={
                "db_table": "pt_notes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ODForm",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="od_form_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "created",
                    pronovetai_app.models.MyDateTimeField(
                        db_column="od_form_created",
                        help_text="When this OD form was created",
                    ),
                ),
                (
                    "call_taken_by",
                    models.CharField(
                        blank=True,
                        db_column="od_form_call_taken",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "type_of_call",
                    models.CharField(
                        choices=[("inbound", "Inbound"), ("outbound", "Outbound")],
                        db_column="od_form_call_type",
                        max_length=10,
                    ),
                ),
                (
                    "source_of_call",
                    models.CharField(
                        choices=[
                            ("newspaper", "Newspaper"),
                            ("old_client", "Old Client"),
                            ("online_marketing", "Online Marketing"),
                            ("referral", "Referral"),
                            ("signage", "Signage"),
                            ("website", "Website"),
                            ("yellow_pages", "Yellow Pages"),
                            ("others", "Others"),
                        ],
                        db_column="od_form_call_source",
                        max_length=20,
                    ),
                ),
                (
                    "type_of_caller",
                    models.CharField(
                        choices=[
                            ("broker", "Broker"),
                            ("direct", "Direct Buyer / Lease"),
                        ],
                        db_column="od_form_caller_type",
                        max_length=20,
                    ),
                ),
                (
                    "intent",
                    models.CharField(
                        choices=[
                            ("rent", "To Rent"),
                            ("buy", "To Buy"),
                            ("both", "Both"),
                        ],
                        db_column="od_form_intent",
                        max_length=10,
                    ),
                ),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("expanding", "Expanding"),
                            ("relocating", "Relocating"),
                            ("new_office", "New Office"),
                            ("consolidating", "Consolidating"),
                            ("downsizing", "Downsizing"),
                            ("upgrading", "Upgrading"),
                            ("expanding_retaining", "Expanding while retaining"),
                            ("others", "Others"),
                        ],
                        db_column="od_form_purpose",
                        max_length=30,
                    ),
                ),
                (
                    "size_minimum",
                    models.DecimalField(
                        blank=True,
                        db_column="od_form_size_min",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "size_maximum",
                    models.DecimalField(
                        blank=True,
                        db_column="od_form_size_max",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "budget_minimum",
                    models.DecimalField(
                        blank=True,
                        db_column="od_form_budget_min",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "budget_maximum",
                    models.DecimalField(
                        blank=True,
                        db_column="od_form_budget_max",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "preferred_location",
                    models.CharField(
                        blank=True,
                        db_column="od_form_preferred_loc",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "started_scouting",
                    models.BooleanField(
                        blank=True,
                        db_column="od_form_scouted",
                        default=False,
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, db_column="od_form_notes", null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("done_deal", "Done Deal"),
                        ],
                        db_column="od_form_status",
                        default="active",
                        max_length=10,
                    ),
                ),
                (
                    "created_date",
                    pronovetai_app.models.MyDateTimeField(
                        auto_now_add=True, db_column="created_date"
                    ),
                ),
                (
                    "edited_date",
                    pronovetai_app.models.MyDateTimeField(
                        auto_now=True, db_column="edited_date"
                    ),
                ),
            ],
            options={
                "db_table": "pt_od_forms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="unit_id", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("floor", models.IntegerField()),
                (
                    "marketing_status",
                    models.CharField(
                        choices=[
                            ("lease", "For Lease"),
                            ("sale", "For Sale"),
                            ("lease_sale", "For Lease and For Sale"),
                            ("unknown", "Don't know"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "vacancy_status",
                    models.CharField(
                        choices=[("vacant", "Vacant"), ("occupied", "Occupied")],
                        default="vacant",
                        max_length=20,
                    ),
                ),
                ("foreclosed", models.BooleanField(default=False)),
                ("contact_information", models.CharField(max_length=255)),
                (
                    "gross_floor_area",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "net_floor_area",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "floor_to_ceiling_height",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("ceiling_condition", models.CharField(max_length=100)),
                ("floor_condition", models.CharField(max_length=100)),
                ("partition_condition", models.CharField(max_length=100)),
                ("lease_commencement_date", models.DateField(blank=True, null=True)),
                ("lease_expiry_date", models.DateField(blank=True, null=True)),
                (
                    "asking_rent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "allocated_parking_slot",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "price_per_parking_slot",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "minimum_period",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "escalation_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                ("rent_free", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "dues",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "sale_parking",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "pt_units",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UnitImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="unit_images/",
                        validators=[pronovetai_app.models.validated_image_size],
                    ),
                ),
            ],
            options={
                "db_table": "pt_unit_images",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "pt_user_logs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="user_type_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "description",
                    models.CharField(db_column="user_type_desc", max_length=255),
                ),
                ("created_at", models.DateTimeField(db_column="user_type_created")),
            ],
            options={
                "db_table": "pt_user_types",
                "managed": False,
            },
        ),
    ]
